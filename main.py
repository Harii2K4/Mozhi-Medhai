import streamlit as st
from withtextrecog import recognize_speech_multi_language
from text_speech import text_speech
from azure_translation import translation
import time
import os

def main():
    st.set_page_config(page_title="Multilingual Speech Assistant", page_icon="ЁЯМР", layout="wide")

    st.title("ЁЯОЩя╕П Multilingual Speech Assistant ЁЯЧгя╕П")
    st.markdown("---")

    # Initialize session state variables
    if 'recognized_text' not in st.session_state:
        st.session_state.recognized_text = ""
    if 'source_language' not in st.session_state:
        st.session_state.source_language = ""
    if 'translated_text' not in st.session_state:
        st.session_state.translated_text = ""

    col1, col2 = st.columns(2)

    with col1:
        st.subheader("ЁЯУе Speech Input")
        
        # Add dropdown for input language selection
        input_language = st.selectbox(
            "Select input language",
            ["Auto-detect", "English", "Tamil"],
            key="input_language"
        )
        
        # Assign language code based on selection
        if input_language == "Tamil":
            language_code = "ta-IN"
        elif input_language == "English":
            language_code = "en-IN"
        else:
            language_code = None
        
        if st.button("ЁЯОд Start Speech Recognition", key="speech_recognition"):
            with st.spinner("ЁЯОз Listening..."):
                recognized_text, source_language = get_valid_speech(language_code)
                if recognized_text is not None:
                    st.session_state.recognized_text = recognized_text
                    st.session_state.source_language = source_language

        if st.session_state.recognized_text:
            st.info(f"ЁЯЧгя╕П Recognized Text: {st.session_state.recognized_text}")
            st.success(f"ЁЯМН Source Language: {st.session_state.source_language}")

    with col2:
        st.subheader("ЁЯУд Translation and Speech Output")
        if st.session_state.recognized_text:
            if st.button("ЁЯФД Translate", key="translate"):
                with st.spinner("ЁЯУЪ Translating..."):
                    st.session_state.translated_text = translation(st.session_state.recognized_text,input_language)

            if st.session_state.translated_text:
                st.info(f"ЁЯЗоЁЯЗ│ Translated Text (Tamil): {st.session_state.translated_text}")

                if st.button("ЁЯФК Convert to Speech", key="text_to_speech"):
                    with st.spinner("ЁЯО╡ Converting to speech..."):
                        output_file = text_speech(st.session_state.translated_text)
                    if output_file and os.path.exists(output_file):
                        st.success("ЁЯОЙ Speech conversion complete!")
                        st.audio(output_file)

    st.markdown("---")
    st.subheader("ЁЯУЭ Instructions")
    st.markdown("""
    1. Select the input language from the dropdown (Auto-detect, English, or Tamil).
    2. Click on 'Start Speech Recognition' to begin speaking.
    3. Once your speech is recognized, you'll see the text and detected language.
    4. Click 'Translate to Tamil' to get the Tamil translation.
    5. Finally, click 'Convert to Speech' to hear the Tamil translation.
    6. Say 'bye' to exit the program.
    """)
    
    st.markdown("---")
    st.subheader("ЁЯУЭ ро╡ро┤ро┐роорпБро▒рпИроХро│рпН")
    st.markdown("""
    1. роЙро│рпНро│рпАроЯрпНроЯрпБ роорпКро┤ро┐ропрпИ (родро╛ройро╛роХ роХрогрпНроЯро▒ро┐родро▓рпН, роЖроЩрпНроХро┐ро▓роорпН, роЕро▓рпНро▓родрпБ родрооро┐ро┤рпН) роХрпАро┤рпЗропрпБро│рпНро│ роорпЖройрпБро╡ро┐ро▓рпН роЗро░рпБроирпНродрпБ родрпЗро░рпНро╡рпБ роЪрпЖропрпНропро╡рпБроорпН.
    2. 'родрпКроЯроЩрпНроХрпБ роЙро░рпИ роЕро▒ро┐ро╡ро┐рокрпНрокрпБ' роОройрпНрокродрпИроХрпН роХро┐ро│ро┐роХрпН роЪрпЖропрпНродрпБ рокрпЗроЪродрпН родрпКроЯроЩрпНроХро╡рпБроорпН.
    3. роЙроЩрпНроХро│рпН рокрпЗроЪрпНроЪрпБ роЕроЯрпИропро╛ро│роорпН роХро╛рогрокрпНрокроЯрпНроЯро╡рпБроЯройрпН, роЙро░рпИ рооро▒рпНро▒рпБроорпН роХрогрпНроЯро▒ро┐ропрокрпНрокроЯрпНроЯ роорпКро┤ро┐ роХро╛рогрпНрокро┐роХрпНроХрпБроорпН.
    4. 'родрооро┐ро┤рпБроХрпНроХрпБ роорпКро┤ро┐рокрпЖропро░рпНрокрпНрокрпБ' роОройрпНрокродрпИроХрпН роХро┐ро│ро┐роХрпН роЪрпЖропрпНродрпБ родрооро┐ро┤рпН роорпКро┤ро┐рокрпЖропро░рпНрокрпНрокрпИрокрпН рокрпЖро▒ро╡рпБроорпН.
    5. роХроЯрпИроЪро┐ропро╛роХ, 'роЙро░рпИ рокрпЗроЪ рооро╛ро▒рпНро▒рпБ' роОройрпНрокродрпИроХрпН роХро┐ро│ро┐роХрпН роЪрпЖропрпНродрпБ родрооро┐ро┤рпН роорпКро┤ро┐рокрпЖропро░рпНрокрпНрокрпИ роХрпЗроЯрпНроХро╡рпБроорпН.
    6. 'рокрпИ' роОройрпНро▒рпБ роЪрпКро▓рпНроХро┐ройрпНро▒ роорпБро▒рпИроорпИропрпИ роорпБроЯро┐роХрпНроХро╡рпБроорпН.
    """)


    # Exit condition
    if "bye" in st.session_state.recognized_text.lower():
        st.warning("ЁЯСЛ Exiting the program. Goodbye!")
        time.sleep(2)
        st.stop()

def get_valid_speech(language_code):
    max_attempts = 3
    for attempt in range(max_attempts):
        recognized_text, source_language = recognize_speech_multi_language(language_code)
        if recognized_text is not None:
            return recognized_text, source_language
        st.error(f"тЭМ Speech recognition failed. Attempt {attempt + 1}/{max_attempts}. Please try again.")
        time.sleep(1)
    return None, None

if __name__ == "__main__":
    main()